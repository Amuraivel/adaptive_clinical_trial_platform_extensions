"Given the variety of scenarios implemented and presented, this file helps to identify the differences between them according to their respective function.",,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,
Combinations from server.sim function,,,,,,,,,Data dictionary,,,,,,,,
sim.num,approach/prior,PP type,RR,AR,n.burn,block.num,int.ind,,sim.num,number fed into function,,,,,,,
1,MEM/EB10,constant,0.7,TRUE,60,5,TRUE,,approach/prior,"approach used in code ('EB10' for MEM with EB10 prior, 'pie' for MEM with fully Bayesian equal prior, 'BB' for PREVAIL-II, 'Pooled' for naïve pooling)",,,,,,,
2,MEM/EB10,both,0.7,TRUE,60,5,TRUE,,,,,,,,,,
3,MEM/equal,constant,0.7,TRUE,60,5,TRUE,,PP type,identifies if PP thresholds used are calibrated for constant mortality scenario only or both scenarios,,,,,,,
4,MEM/equal,both,0.7,TRUE,60,5,TRUE,,,,,,,,,,
5,PREVAIL II,NA,0.7,FALSE,NA,NA,TRUE,,RR,relative risk assumed for effective treatment,,,,,,,
6,Naïve Pooling,constant,0.7,TRUE,60,5,TRUE,,AR,adaptive randomization implemented,,,,,,,
7,Naïve Pooling,both,0.7,TRUE,60,5,TRUE,,n.burn,"if AR=T, length of burn-in period",,,,,,,
8,MEM/EB10,constant,0.7,TRUE,30,6,TRUE,,block.num,"if AR=T, number of blocks to update randomization ratio in after burn-in period",,,,,,,
9,MEM/EB10,constant,0.7,TRUE,90,4,TRUE,,int.ind,"should interim monitoring be implemented to consider if the segment should terminate early (note: if int.ind=F and AR=T, the trial will update at each block, but not terminate even if it would have crossed a threshold)",,,,,,,
10,MEM/EB10,constant,0.7,FALSE,NA,NA,TRUE,,,,,,,,,,
11,MEM/EB20,constant,0.7,TRUE,60,5,TRUE,,,,,,,,,,
12,MEM/EB10,constant,0.5,TRUE,60,5,TRUE,,fb,futility boundary to use to terminate a segment early,,,,,,,
13,MEM/EB10,constant,0.5,TRUE,60,5,TRUE,,,,,,,,,,
14,PREVAIL II,NA,0.5,FALSE,NA,NA,TRUE,,,,,,,,,,
15,MEM/EB10,constant,0.7,TRUE,60,5,FALSE,,,,,,,,,,
16,MEM/EB10,both,0.7,TRUE,60,5,FALSE,,,,,,,,,,
,,,,,,,,,,,,,,,,,
Combinations from server.sim_futility function,,,,,,,,,,,,,,,,,
sim.num,approach/prior,PP type,RR,AR,n.burn,block.num,int.ind,fb,,,,,,,,,
1,MEM/EB10,constant,0.7,TRUE,60,5,TRUE,0.1,,,,,,,,,
2,MEM/equal,constant,0.7,TRUE,60,5,TRUE,0.1,,,,,,,,,
3,PREVAIL II,NA,0.7,FALSE,NA,NA,TRUE,0.1,,,,,,,,,
4,Naïve Pooling,constant,0.7,TRUE,60,5,TRUE,0.1,,,,,,,,,
5,MEM/EB10,constant,0.7,TRUE,60,5,TRUE,0.01,,,,,,,,,
6,MEM/equal,constant,0.7,TRUE,60,5,TRUE,0.01,,,,,,,,,
7,PREVAIL II,NA,0.7,FALSE,NA,NA,TRUE,0.01,,,,,,,,,
8,Naïve Pooling,constant,0.7,TRUE,60,5,TRUE,0.01,,,,,,,,,
9,MEM/EB10,constant,0.7,TRUE,60,5,TRUE,0.001,,,,,,,,,
10,MEM/equal,constant,0.7,TRUE,60,5,TRUE,0.001,,,,,,,,,
11,PREVAIL II,NA,0.7,FALSE,NA,NA,TRUE,0.001,,,,,,,,,
12,Naïve Pooling,constant,0.7,TRUE,60,5,TRUE,0.001,,,,,,,,,
13,MEM/EB10,constant,0.7,TRUE,60,5,TRUE,0.2,,,,,,,,,
14,MEM/equal,constant,0.7,TRUE,60,5,TRUE,0.2,,,,,,,,,
15,PREVAIL II,NA,0.7,FALSE,NA,NA,TRUE,0.2,,,,,,,,,
16,Naïve Pooling,constant,0.7,TRUE,60,5,TRUE,0.2,,,,,,,,,
,,,,,,,,,,,,,,,,,
Combinations from server.sim_2nonnull function,,,,,,,,,,,,,,,,,
sim.num,approach/prior,PP type,RR,AR,n.burn,block.num,int.ind,,,,,,,,,,
1,MEM/EB10,constant,0.7,TRUE,60,5,TRUE,,,,,,,,,,
2,MEM/equal,constant,0.7,TRUE,60,5,TRUE,,,,,,,,,,
3,PREVAIL II,NA,0.7,FALSE,NA,NA,TRUE,,,,,,,,,,
4,Naïve Pooling,constant,0.7,TRUE,60,5,TRUE,,,,,,,,,,
